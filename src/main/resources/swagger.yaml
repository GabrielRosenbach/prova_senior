openapi: 3.0.3
info:
  title: Swagger Users - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://localhost:8080
tags:
  - name: produtoServico
    description: Controle de Produto/Serviço
  - name: pedido
    description: Controle de Pedido
  - name: itemPedido
    description: Controle de Item do Pedido
paths:
  /produtoServico:
    post:
      tags: 
      - produtoServico
      summary: Cadastro de Produto/Serviço.
      operationId: createProdutoServico
      requestBody:
        description: Objeto de cadastro de Produto/Serviço
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CadastroProdutoServicoDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/CadastroProdutoServicoDTO'
      responses:
        201:
          description: Cadastro realizado com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProdutoServicoDTO'
    get:
      tags: 
      - produtoServico
      summary: Lista todos os Produto/Serviço.
      operationId: listProdutoServico
      parameters:
        - name: inicio
          in: query
          example: 5
          required: true
          description: Inicio da paginação. 
          schema:
            type: integer
        - name: tamanho
          in: query
          example: 10
          required: true
          description: Quantidade dei itens por paginação. 
          schema:
            type: integer
        - name: ascendente
          in: query
          example: true
          required: true
          description: Se a direção é ascendente ou descendente.
          schema:
            type: boolean
        - name: campoOrderBy
          in: query
          example: descricao
          required: true
          description: Nome do campo que será ordenado
          schema:
            type: string
      responses:
        200:
          description: Listagem realiza com sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProdutoServicoDTO'
  /produtoServico/{id}:
    get:
      tags:
        - produtoServico
      summary: Busca um Produto/Serviço através do UUID.
      operationId: readProdutoServico
      parameters:
        - name: id
          in: path
          example: e6bf2e78-b72c-494e-a8b2-eebc35b8dcbe
          description: 'ID do Produto/Serviço'
          required: true
          schema:
            type: string
      responses:
        200:
          description: Busca realizada com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProdutoServicoDTO'
    put:
      tags:
        - produtoServico
      summary: Atualiza um Produto/Serviço através do UUID.
      operationId: updateProdutoServico
      requestBody:
        description: Objeto de atualização de Produto/Serviço
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CadastroProdutoServicoDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/CadastroProdutoServicoDTO'
      parameters:
        - name: id
          in: path
          example: e6bf2e78-b72c-494e-a8b2-eebc35b8dcbe
          description: 'ID do Produto/Serviço'
          required: true
          schema:
            type: string
      responses:
        200:
          description: Atualização realizada com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProdutoServicoDTO'
    delete:
      tags:
        - produtoServico
      summary: Exclui um Produto/Serviço através do UUID.
      operationId: deleteProdutoServico
      parameters:
        - name: id
          in: path
          example: e6bf2e78-b72c-494e-a8b2-eebc35b8dcbe
          description: 'ID do Produto/Serviço'
          required: true
          schema:
            type: string
      responses:
        204:
          description: Exclusão realizada com sucesso!
  /pedido:
    post:
      tags: 
      - pedido
      summary: Cadastro de Pedido.
      operationId: createPedido
      requestBody:
        description: Objeto de cadastro de Produto/Serviço
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CadastroPedidoDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/CadastroPedidoDTO'
      responses:
        201:
          description: Cadastro realizado com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PedidoDTO'
    get:
      tags: 
      - pedido
      summary: Listagem de pedido.
      operationId: listPedido
      parameters: 
        - name: inicio
          in: query
          example: 5
          required: true
          description: Inicio da paginação. 
          schema:
            type: integer
        - name: tamanho
          in: query
          example: 10
          required: true
          description: Quantidade dei itens por paginação. 
          schema:
            type: integer
        - name: ascendente
          in: query
          example: true
          required: true
          description: Se a direção é ascendente ou descendente.
          schema:
            type: boolean
        - name: campoOrderBy
          in: query
          example: descricao
          required: true
          description: Nome do campo que será ordenado
          schema:
            type: string
      responses:
        200:
          description: Listagem realiza com sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PedidoDTO'
  /pedido/{id}:
    get:
      tags:
        - pedido
      summary: Busca um Pedido através do UUID.
      operationId: readPedido
      parameters:
        - name: id
          in: path
          example: e6bf2e78-b72c-494e-a8b2-eebc35b8dcbe
          description: UUID do Pedido
          required: true
          schema:
            type: string
      responses:
        200:
          description: Busca realizada com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PedidoDTO'
    put:
      tags:
        - pedido
      summary: Atualiza um Pedido através do UUID.
      operationId: updatePedido
      requestBody:
        description: Objeto de atualização de Pedido
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CadastroPedidoDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/CadastroPedidoDTO'
      parameters:
        - name: id
          in: path
          example: e6bf2e78-b72c-494e-a8b2-eebc35b8dcbe
          description:  UUID do Pedido
          required: true
          schema:
            type: string
      responses:
        200:
          description: Atualização realizada com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PedidoDTO'
    delete:
      tags:
        - pedido
      summary: Exclui um Pedido através do UUID.
      operationId: deletePedido
      parameters:
        - name: id
          in: path
          example: e6bf2e78-b72c-494e-a8b2-eebc35b8dcbe
          description: UUID do Pedido
          required: true
          schema:
            type: string
      responses:
        204:
          description: Exclusão realizada com sucesso!
  /itemPedido:
    get:
      tags: 
      - itemPedido
      summary: Lista todos os Itens de todos os Pedidos.
      operationId: listItensPedidos
      parameters: 
        - name: inicio
          in: query
          example: 5
          required: true
          description: Inicio da paginação. 
          schema:
            type: integer
        - name: tamanho
          in: query
          example: 10
          required: true
          description: Quantidade dei itens por paginação. 
          schema:
            type: integer
        - name: ascendente
          in: query
          example: true
          required: true
          description: Se a direção é ascendente ou descendente.
          schema:
            type: boolean
        - name: campoOrderBy
          in: query
          example: descricao
          required: true
          description: Nome do campo que será ordenado
          schema:
            type: string
      responses:
        200:
          description: Listagem realiza com sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemPedidoDTO'
  /itemPedido/{idPedido}:
    post:
      tags: 
      - itemPedido
      summary: Cadastro de Item do Pedido
      operationId: createItemPedido
      parameters:
        - name: idPedido
          in: path
          example: e6bf2e78-b72c-494e-a8b2-eebc35b8dcbe
          description: 'ID do Pedido'
          required: true
          schema:
            type: string
      requestBody:
        description: Objeto de cadastro de Item do Pedido
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CadastroItemPedidoDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/CadastroItemPedidoDTO'
      responses:
        201:
          description: Cadastro realizado com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemPedidoDTO'
    get:
      tags:
        - itemPedido
      summary: Lista Itens de um Pedido
      operationId: listItensPedido
      parameters:
        - name: idPedido
          in: path
          example: e6bf2e78-b72c-494e-a8b2-eebc35b8dcbe
          description: 'ID do Pedido'
          required: true
          schema:
            type: string
        - name: inicio
          in: query
          example: 5
          required: true
          description: Inicio da paginação. 
          schema:
            type: integer
        - name: tamanho
          in: query
          example: 10
          required: true
          description: Quantidade dei itens por paginação. 
          schema:
            type: integer
        - name: ascendente
          in: query
          example: true
          required: true
          description: Se a direção é ascendente ou descendente.
          schema:
            type: boolean
        - name: campoOrderBy
          in: query
          example: descricao
          required: true
          description: Nome do campo que será ordenado
          schema:
            type: string
      responses:
        200:
          description: Listagem realiza com sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemPedidoDTO'
    put:
      tags:
        - itemPedido
      summary: Atualiza uma lista de Itens do pedido
      operationId: updateItensPedido
      requestBody:
        description: Objeto de atualização de Pedido
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CadastroItemPedidoDTO'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CadastroItemPedidoDTO'
      parameters:
        - name: idPedido
          in: path
          example: e6bf2e78-b72c-494e-a8b2-eebc35b8dcbe
          description: UUID do Pedido
          required: true
          schema:
            type: string
      responses:
        200:
          description: Atualização realizada com sucesso!
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemPedidoDTO'
    
  /itemPedido/{idPedido}/{idProdutoServico}:
    get:
      tags:
        - itemPedido
      summary: Busca um item de um Pedido
      operationId: readItemPedido
      parameters:
        - name: idPedido
          in: path
          example: e6bf2e78-b72c-494e-a8b2-eebc35b8dcbe
          description: UUID do Pedido
          required: true
          schema:
            type: string
        - name: idProdutoServico
          in: path
          example: e6bf2e78-b72c-494e-a8b2-eebc35b8dcbe
          description: UUID do produto/servico
          required: true
          schema:
            type: string
      responses:
        200:
          description: Busca realizada com sucesso!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemPedidoDTO'
    delete:
      tags:
        - itemPedido
      summary: Exclui um Item do pedido através do UUID do pedido e do produto/serviço.
      operationId: deleteItemPedido
      parameters:
        - name: idPedido
          in: path
          example: e6bf2e78-b72c-494e-a8b2-eebc35b8dcbe
          description: UUID do Pedido
          required: true
          schema:
            type: string
        - name: idProdutoServico
          in: path
          example: e6bf2e78-b72c-494e-a8b2-eebc35b8dcbe
          description: UUID do produto/servico
          required: true
          schema:
            type: string
      responses:
        204:
          description: Exclusão realizada com sucesso!
components:
  schemas:
    CadastroProdutoServicoDTO:
      type: object
      required: 
      - descricao
      - preco
      - tipo
      - situacao
      properties:
        descricao:
          type: string
          example: Descrição Exemplo
        preco:
          type: number
          example: Preço do Produto/Serviço
        tipo:
          type: integer
          description: 1 - Produto; 2 - Serviço;
          example: 1
        situacao:
          type: integer
          description: Situação do produto/serviço; 1 - Ativado; 2 - Desativado
    ProdutoServicoDTO:
      type: object
      properties:
        id:
          type: string
          example: e6bf2e78-b72c-494e-a8b2-eebc35b8dcbe
        descricao:
          type: string
          example: Descrição Exemplo
        preco:
          type: number
          example: Preço do Produto/Serviço
        tipo:
          type: integer
          description: 1 - Produto; 2 - Serviço;
          example: 1
        situacao:
          type: integer
          description: Situação do produto/serviço; 1 - Ativado; 2 - Desativado
    CadastroPedidoDTO:
      type: object
      required: 
      - itens
      properties:
        situacao:
          type: integer
          description: Situação do pedido; 1 - Aberto; 2 - Fechado
        desconto:
          type: number
          example: 20
        itens:
          type: array
          items:
            $ref: '#/components/schemas/CadastroItemPedidoDTO'
    PedidoDTO:
      type: object
      properties:
        id:
          type: string
          example: d70597e7-e416-46f1-b59c-f0cbdd99b8a6
        desconto:
          type: number
          example: 20
        total:
          type: number
          example: 20
        situacao:
          type: integer
          description: Situação do pedido; 1 - Aberto; 2 - Fechado
          example: 1
        itens:
          type: array
          items:
            $ref: '#/components/schemas/RetornoItemPedidoDTO'
    CadastroItemPedidoDTO:
      type: object
      properties:
        idProdutoServico:
          type: string
          example: d70597e7-e416-46f1-b59c-f0cbdd99b8a6
          description: UUID do Produto/Serviço
        quantidade:
          type: integer
          description: Não nulo quando for um produto
    ItemPedidoDTO:
      type: object
      properties:
        idPedido:
          type: string
          example: d70597e7-e416-46f1-b59c-f0cbdd99b8a6
          description: UUID do Pedido
        idProdutoServico:
          type: string
          example: d70597e7-e416-46f1-b59c-f0cbdd99b8a6
          description: UUID do Produto/Serviço
        quantidade:
          type: integer
          description: Não nulo quando for um produto
    RetornoItemPedidoDTO:
      type: object
      properties:
        produtoServico:
          $ref: '#/components/schemas/ProdutoServicoDTO'
        quantidade:
          type: integer
          description: Não nulo quando for um produto